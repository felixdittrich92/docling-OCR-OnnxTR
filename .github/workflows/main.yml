name: tests

on:
  push:
    branches: main
  pull_request:
    branches: main
  schedule:
    # Runs every 2 weeks on Monday at 03:00 UTC
    - cron: '0 3 * * 1'

jobs:
  pytest-common:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.10", "3.11", "3.12"]
        backend:
          - cpu-headless
          - openvino-headless
        exclude:
          - os: macos-latest
            backend: openvino-headless
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # MacOS issue ref.: https://github.com/actions/setup-python/issues/855 & https://github.com/actions/setup-python/issues/865
          python-version: ${{ matrix.os == 'macos-latest' && matrix.python == '3.10' && '3.11' || matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ matrix.python }}-${{ hashFiles('pyproject.toml') }}-tests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[${{ matrix.backend }},testing] --upgrade
      - name: Run unittests
        run: |
          make test
          coverage xml -o coverage-common-${{ matrix.backend }}-${{ matrix.python }}-${{ matrix.os }}.xml
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-common-${{ matrix.backend }}-${{ matrix.python }}-${{ matrix.os }}
          path: ./coverage-common-${{ matrix.backend }}-${{ matrix.python }}-${{ matrix.os }}.xml
          if-no-files-found: error

  codecov-upload:
    runs-on: ubuntu-latest
    needs: [ pytest-common ]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          flags: unittests
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}